jsdocgen_data("file_lib.test_environment.php.jsonp",{"summary":"Exposes a set of global functions to the test scripts.","description":"<p>Test scripts perform one or more test cases and\nselect conditions that needs to be met for the\ntest to be successful. If these conditions are not met\nor the script crashes or have unexpected output,\nthe test host will capture the errors.</p><code class=\"block\">//two ways to make a test case\n//number 1\ntestCase('Description of the test', function () {\n\t//test a condition and mark the case as failed\n\ttest(1 === true, '1 is not identical to true');\n});\n\n//number 2\ntestCaseBegin();\n\ttest(null !== 0, 'null is not identical to 0');\ntestCaseEnd();</code><p>It is possible to test program flow:</p><code class=\"block\">testCase(function() {\n\tif ( 1 ) {\n\t\t//fail the test explicitly\n\t\ttestFailed('Unexpected program flow');\n\t}\n});\n\ntestCase(function() {\n\t//set some expectations\n\ttestExpect(1, 2, 3);\n\tif ( 1 ) {\n\t\t//output something expected\n\t\ttestOut(1);\n\t}\n\tif ( 0 ) {\n\t\t//output something expected\n\t\ttestOut(2);\n\t}\n\tif ( 3 ) {\n\t\t//output something expected\n\t\ttestOut(3);\n\t}\n\t//the test case will fail because the output is 1, 3 and 1, 2, 3 is expected\n\ttestCheckExpect();\n}); </code><p>It is also possible to test scripts that will crash:</p><code class=\"block\">testCase(function() {\n\t//this test case will succeed only if the script crashes\n\ttestWillCrash();\n\t$a-&gt;crash();\n});</code><p>Test scripts can run themselves again with arguments:</p><code class=\"block\">//this echo is for debugging the test script, it won't break any test case\n$args = testGetArgs();\ntestEcho($args === null ? 'Script started w/o arguments' : 'Script started with arguments');\nif ( $args === null ) {\n\ttestReRun('fork myself');\n}</code>","tags":{"package":"phptestr.test_environment"},"def":{"type":"file","name":"lib/test_environment.php"}});